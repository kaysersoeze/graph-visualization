{"version":3,"file":"../../minimizer.js","sources":["minimizer.c"],"names":[],"mappingsmBA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;;AAIA;AACA;;AAAA;AAAA;AAAA;;;;AACA;;AAAA;AAAA;AAAA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;;AADA;AAAA;AAAA;;AAOA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAYA","sourcesContent":["/*****************************************************************************\n\n* Author : Ludvig Sundstr√∂m\n\n* File Name : minimize.c\n\n* Purpose :   \n\n* Creation Date : 24-06-2015\n\n* Last Modified : \n\n*****************************************************************************/\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <stddef.h>\n#include <math.h>\n\n#define STIFFNESS 5\n\nfloat **dmat;\nint len;\n\nstruct point {\n  float x;\n  float y;\n};\n\nfloat springEnergy (struct point pi, struct point pj, float wij, float dij) {\n  float dx = pi.x - pj.x;\n  float dy = pi.y - pj.y;\n  float dist = (float) sqrt(dx * dx + dy * dy);\n  return wij * (float) pow(dist - dij, 2);\n}\n\n\nfloat systemEnergy (float *flatpos) {\n  int nPositions = len / 2; \n  struct point *positions = malloc(sizeof(struct point) * nPositions);\n  int i, j;\n  for (i = 0; i < len; i += 2) {\n    struct point cp;\n    cp.x = *(flatpos + i);\n    cp.y = *(flatpos + i + 1);\n    *(positions + i / 2) = cp;\n  }\n\n  float energy = 0;\n  for (i = 0; i < nPositions - 1; i++) {\n    for (j = i + 1; j < nPositions; j++) {\n      struct point cpi, cpj;\n      cpi = positions[i];\n      cpj = positions[j];\n      energy += springEnergy(cpi, cpj, STIFFNESS, dmat[i][j]);\n    }\n  }\n  free(positions);\n  return energy;\n}\n\n//returns the function value at point x\nfloat f (float x[]) {\n  return x[0] * x[0] * x[0] - 3;\n}\nfloat (*func)(float []) = f;\n\n//returns the gradient \nvoid df (float x[], float g[]) {\n  g[0] = 3 * x[0] * x[0];\n}\nvoid (*dfunc)(float [], float []) = df;\n\n\nint minimize (float *flatpos, float *flatdmat, int posLen) {\n\n  int i, j, count;\n  int nPositions = posLen / 2; \n\n  dmat = malloc(sizeof(void *) * nPositions);\n\n  for (i = 0; i < nPositions; i++) {\n    *(dmat + i) = malloc(sizeof(float) * nPositions);\n  }\n\n  count = 0;\n  for (i = 0; i < nPositions; i++) {\n    for (j = 0; j < nPositions; j++) {\n      *(*(dmat + i) + j) = flatdmat[count];  \n      count++;\n    }\n  }\n\n  len = posLen;\n  float e = systemEnergy(flatpos);\n  \n  printf(\"%f\\n\", e);\n\n  free(dmat);\n\n  /*void frprmn();*/\n\n  /*float p[1];*/\n  /*p[0] = 0.5;*/\n\n  /*int *iter = malloc(sizeof(int));*/\n  /*float *fret = malloc(sizeof(float));*/\n\n  /*frprmn(p, length, 0.1, iter, fret, func, dfunc);*/\n\n  return 0; \n\n}\n\n\n\n"]}