{"version":3,"file":"../../minimizer.js","sources":["frprmn.c"],"names":[],"mappingsqEA;AAAA;AAAA;AAAA","sourcesContent":["#include <math.h>\n#include <stddef.h>\n#include <stdlib.h>\n#include <stdio.h>\n\n#define ITMAX 200\n#define EPS 1.0e-10\n#define FREEALL free_vector(xi,1,n);free_vector(h,1,n);free_vector(g,1,n);\n\nvoid frprmn(p,n,ftol,iter,fret,func,dfunc)\nfloat p[],ftol,*fret,(*func)();\nvoid (*dfunc)();\nint n,*iter;\n{\n  int j,its;\n  float gg,gam,fp,dgg;\n  float *g,*h,*xi,*vector();\n  void linmin(),nrerror(),free_vector();\n\n  g=vector(1,n);\n  h=vector(1,n);\n  xi=vector(1,n);\n  fp=(*func)(p);\n  (*dfunc)(p,xi);\n  for (j=1;j<=n;j++) {\n    g[j] = -xi[j];\n    xi[j]=h[j]=g[j];\n  }\n  for (its=1;its<=ITMAX;its++) {\n    *iter=its;\n    linmin(p,xi,n,fret,func);\n    if (2.0*fabs(*fret-fp) <= ftol*(fabs(*fret)+fabs(fp)+EPS)) {\n      FREEALL\n      return;\n    }\n    fp=(*func)(p);\n    (*dfunc)(p,xi);\n    dgg=gg=0.0;\n    for (j=1;j<=n;j++) {\n      gg += g[j]*g[j];\n      /*\t\t  dgg += xi[j]*xi[j];\t*/\n      dgg += (xi[j]+g[j])*xi[j];\n    }\n    if (gg == 0.0) {\n      FREEALL\n      return;\n    }\n    gam=dgg/gg;\n    for (j=1;j<=n;j++) {\n      g[j] = -xi[j];\n      xi[j]=h[j]=g[j]+gam*h[j];\n    }\n  }\n  nrerror(\"Too many iterations in FRPRMN\");\n}\n\n//returns the function value at point x\nfloat f (float x[]) {\n  return x[0] * x[0] * x[0] - 3;\n}\nfloat (*func)(float []) = f;\n\n//returns the gradient \nvoid df (float x[], float g[]) {\n  g[0] = 3 * x[0] * x[0];\n}\nvoid (*dfunc)(float [], float []) = df;\n\nint cAdd (int x, int y) {\n  return x + y;\n}\n\n/*int main (int argc, char *argv[]) {*/\n  \n  /*FILE *fp = fopen(\"test.txt\", \"r\");*/\n  \n  /*char c;*/\n  /*while ((c = fgetc(fp)) != EOF) {*/\n    /*printf(\"%c\", c);*/\n  /*} */\n\n  /*fclose(fp);*/\n\n  /*float p[1];*/\n  /*p[0] = 0.5;*/\n\n  /*int *iter = malloc(sizeof(int));*/\n  /*float *fret = malloc(sizeof(float));*/\n\n  /*frprmn(p, 1, 0.1, iter, fret, func, dfunc);*/\n\n  /*printf(\"Iterations: %d, minimum: %f\", *iter, *fret);*/\n      \n  /*return 0;*/\n/*}*/\n\n#undef ITMAX\n#undef EPS\n#undef FREEALL\n\n"]}